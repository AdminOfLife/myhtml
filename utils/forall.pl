#!/usr/bin/perl -w

use utf8;
use strict;
use MyHTML::Base;

my $utils = MyHTML::Base->new();

my $enum = q~
    MyHTML_PARSE_STATE_DATA = 0,
    MyHTML_PARSE_STATE_CHARACTER_REFERENCE_IN_DATA = 1,
    MyHTML_PARSE_STATE_RCDATA = 2,
    MyHTML_PARSE_STATE_CHARACTER_REFERENCE_IN_RCDATA = 3,
    MyHTML_PARSE_STATE_RAWTEXT = 4,
    MyHTML_PARSE_STATE_SCRIPT_DATA = 5,
    MyHTML_PARSE_STATE_PLAINTEXT = 6,
    MyHTML_PARSE_STATE_TAG_OPEN = 7,
    MyHTML_PARSE_STATE_END_TAG_OPEN = 8,
    MyHTML_PARSE_STATE_TAG_NAME = 9,
    MyHTML_PARSE_STATE_RCDATA_LESS_THAN_SIGN = 10,
    MyHTML_PARSE_STATE_RCDATA_END_TAG_OPEN = 11,
    MyHTML_PARSE_STATE_RCDATA_END_TAG_NAME = 12,
    MyHTML_PARSE_STATE_RAWTEXT_LESS_THAN_SIGN = 13,
    MyHTML_PARSE_STATE_RAWTEXT_END_TAG_OPEN = 14,
    MyHTML_PARSE_STATE_RAWTEXT_END_TAG_NAME = 15,
    MyHTML_PARSE_STATE_SCRIPT_DATA_LESS_THAN_SIGN = 16,
    MyHTML_PARSE_STATE_SCRIPT_DATA_END_TAG_OPEN = 17,
    MyHTML_PARSE_STATE_SCRIPT_DATA_END_TAG_NAME = 18,
    MyHTML_PARSE_STATE_SCRIPT_DATA_ESCAPE_START = 19,
    MyHTML_PARSE_STATE_SCRIPT_DATA_ESCAPE_START_DASH = 20,
    MyHTML_PARSE_STATE_SCRIPT_DATA_ESCAPED = 21,
    MyHTML_PARSE_STATE_SCRIPT_DATA_ESCAPED_DASH = 22,
    MyHTML_PARSE_STATE_SCRIPT_DATA_ESCAPED_DASH_DASH = 23,
    MyHTML_PARSE_STATE_SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN = 24,
    MyHTML_PARSE_STATE_SCRIPT_DATA_ESCAPED_END_TAG_OPEN = 25,
    MyHTML_PARSE_STATE_SCRIPT_DATA_ESCAPED_END_TAG_NAME = 26,
    MyHTML_PARSE_STATE_SCRIPT_DATA_DOUBLE_ESCAPE_START = 27,
    MyHTML_PARSE_STATE_SCRIPT_DATA_DOUBLE_ESCAPED = 28,
    MyHTML_PARSE_STATE_SCRIPT_DATA_DOUBLE_ESCAPED_DASH = 29,
    MyHTML_PARSE_STATE_SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH = 30,
    MyHTML_PARSE_STATE_SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN = 31,
    MyHTML_PARSE_STATE_SCRIPT_DATA_DOUBLE_ESCAPE_END = 32,
    MyHTML_PARSE_STATE_BEFORE_ATTRIBUTE_NAME = 33,
    MyHTML_PARSE_STATE_ATTRIBUTE_NAME = 34,
    MyHTML_PARSE_STATE_AFTER_ATTRIBUTE_NAME = 35,
    MyHTML_PARSE_STATE_BEFORE_ATTRIBUTE_VALUE = 36,
    MyHTML_PARSE_STATE_ATTRIBUTE_VALUE_DOUBLE_QUOTED = 37,
    MyHTML_PARSE_STATE_ATTRIBUTE_VALUE_SINGLE_QUOTED = 38,
    MyHTML_PARSE_STATE_ATTRIBUTE_VALUE_UNQUOTED = 39,
    MyHTML_PARSE_STATE_CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE = 40,
    MyHTML_PARSE_STATE_AFTER_ATTRIBUTE_VALUE__QUOTED = 41,
    MyHTML_PARSE_STATE_SELF_CLOSING_START_TAG = 42,
    MyHTML_PARSE_STATE_BOGUS_COMMENT = 43,
    MyHTML_PARSE_STATE_MARKUP_DECLARATION_OPEN = 44,
    MyHTML_PARSE_STATE_COMMENT_START = 45,
    MyHTML_PARSE_STATE_COMMENT_START_DASH = 46,
    MyHTML_PARSE_STATE_COMMENT = 47,
    MyHTML_PARSE_STATE_COMMENT_END_DASH = 48,
    MyHTML_PARSE_STATE_COMMENT_END = 49,
    MyHTML_PARSE_STATE_COMMENT_END_BANG = 50,
    MyHTML_PARSE_STATE_DOCTYPE = 51,
    MyHTML_PARSE_STATE_BEFORE_DOCTYPE_NAME = 52,
    MyHTML_PARSE_STATE_DOCTYPE_NAME = 53,
    MyHTML_PARSE_STATE_AFTER_DOCTYPE_NAME = 54,
    MyHTML_PARSE_STATE_AFTER_DOCTYPE_PUBLIC_KEYWORD = 55,
    MyHTML_PARSE_STATE_BEFORE_DOCTYPE_PUBLIC_IDENTIFIER = 56,
    MyHTML_PARSE_STATE_DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED = 57,
    MyHTML_PARSE_STATE_DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED = 58,
    MyHTML_PARSE_STATE_AFTER_DOCTYPE_PUBLIC_IDENTIFIER = 59,
    MyHTML_PARSE_STATE_BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS = 60,
    MyHTML_PARSE_STATE_AFTER_DOCTYPE_SYSTEM_KEYWORD = 61,
    MyHTML_PARSE_STATE_BEFORE_DOCTYPE_SYSTEM_IDENTIFIER  = 62,
    MyHTML_PARSE_STATE_DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED = 63,
    MyHTML_PARSE_STATE_DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED = 64,
    MyHTML_PARSE_STATE_AFTER_DOCTYPE_SYSTEM_IDENTIFIER = 65,
    MyHTML_PARSE_STATE_BOGUS_DOCTYPE = 66,
    MyHTML_PARSE_STATE_CDATA_SECTION = 67,
    MyHTML_PARSE_STATE_FIRST_ENTRY = 0,
    MyHTML_PARSE_STATE_LAST_ENTRY = 68
~;

my @list; my $count = 0;
foreach my $line (split /\n/, $enum) {
        $line =~ s/^\s+//;
        next if $line eq "";
        
        $line =~ s/^MyHTML_PARSE/MyHTML_TOKENIZER/;
        
        push @list, [split /\s*=\s*/, $line];
        
        $list[-1]->[1] = sprintf("0x%03x", $count);
        $count++;
}

$list[-1]->[1] = sprintf("0x%03x", eval($list[-3]->[1]) + 1);
$list[-2]->[1] = $list[0]->[0];

my $res = $utils->format_list_text(\@list, "= ");

foreach my $line (@$res) {
        print $line, ",\n";
}


